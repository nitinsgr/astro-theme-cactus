---
import { Image } from "astro:assets";
import { getFormattedDate } from "@/utils";
import type { CollectionEntry } from "astro:content";

interface Props {
	content: CollectionEntry<"post">;
}

const {
	content: { data },
} = Astro.props;

const datetime = data.publishDate.toISOString();
const postDate = getFormattedDate(data.publishDate, { month: "long" });

function getTagColorClass(index) {
  const colorClasses = ["bg-green-100", "bg-blue-100", "bg-yellow-100"]; // Define your color classes here

  // Return the color class based on the index
  return colorClasses[index % colorClasses.length];
}
---

<div class="flex flex-col">
	
	
<section class="bg-#F9F9F9 dark:bg-[#1d1f21] text-center flex align-middle items-center">
	
	<div class="py-8 mx-auto max-w-screen-3xl lg:py-0">
		<!-- {data.logo && (
		  <div class="aspect-h-16 max-w-5xl mb-6 flex items-left">
			<Image
			  src={data.logo}
			  alt={data.description}
			  loading="eager"
			  width={600} // Add the width of your image here
			  // Add the height of your image here
			  fetchpriority="high"
			/>
		  </div>
		)} -->
		<h2 class="mb-2 text-xl text-gray-900 md:text-2xl leading-tight lg:text-4xl font-Aileron-Black font-bold dark:text-white">{data.title}</h2>
	  
		<!-- Publisher Detail -->
		<div class="flex font-Aileron-Black pt-4 items-center mt-2 mb-10 text-center flex align-middle items-center">
		  <div class="w-12 h-12 rounded-full overflow-hidden mr-4">
			<img src="/Personal/imagee.png" alt="Publisher Avatar" loading="lazy" />
		  </div>
		  <div>
			<p class="text-sm text-gray-600">Published on {data.publishDate}</p>
			<p class="text-sm text-gray-600 flex items-center">
			  <span>Published by {data.publisher}</span>
			</p>
		  </div>
		</div>
	  </div>
	  
	
</section>
<!-- 
	{data.ogImage && (
		<div class="aspect-h-16 max-w-5xl mb-6 prose">
			<div class="">
				<Image
				src={data.ogImage}
				alt={data.description}
				loading="eager"
				width={600} // Add the width of your image here
				 // Add the height of your image here
				fetchpriority="high"
			/>
			</div>	
			
		</div>
	)} -->
	
	<hr/>
<!-- <ol class="items-center text-center sm:flex mt-24 mb-20 font-Aileron-Black">
    <li class="relative mb-6 sm:mb-0">
        <div class="flex items-center">
        </div>
        <div class="mt-3 sm:pr-8">
            <h3 class="text-lg font-semibold text-gray-900 dark:text-white">Context</h3>
            <p class="text-base font-normal text-gray-500 dark:text-gray-400">Collaborative Personal Endeavor</p>
        </div>
    </li>
    <li class="relative mb-6 sm:mb-0">
        <div class="flex items-center">
        </div>
        <div class="mt-3 sm:pr-8">
            <h3 class="text-lg font-semibold text-gray-900 dark:text-white">Time</h3>
            <time class="block mb-2 text-md font-normal leading-6 text-gray-700 dark:text-gray-500">Feb'2023 to March'2023</time>																							
        </div>
    </li>
    <li class="relative mb-6 sm:mb-0">
        <div class="flex items-center">
        </div>
        <div class="mt-3 sm:pr-8">
            <h3 class="text-lg font-semibold text-gray-900 dark:text-white">Tools</h3>
            <p class="text-base font-normal text-gray-500 dark:text-gray-400">Figma, Miro, Google Docs, Invision, Pen & Paper</p>
        </div>
    </li>
</ol> -->

	<!-- {!!data.tags?.length && (
		<div class="mt-1 flex flex-wrap gap-2 sm:mt-0">
			<p class="mr-2 mt-1 font-opensans text-sm sm:text-base">Tags:</p>
			{data.tags.map((tag, i) => (
				<div class={` ${getTagColorClass(i)} pt-1 text-gray text-xs sm:text-sm font-medium mr-2 px-2.5 py-0.5 rounded-full dark:bg-white dark:text-black`} key={i}>
					<a href={`/tags/${tag}`}>{tag}</a>
				</div>
			))}
		</div>
	)} -->
</div>

























